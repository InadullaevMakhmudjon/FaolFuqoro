type Role {
  id: ID! @id
  name: String!
}

type Status {
  id: ID! @id
  name: String!
}

type People {
  id: ID! @id
  name: String!
  surname: String!
  street: String!
  address: String!
  home: String!
  phone: String! @unique
  password: String!
  image: String!
  reports: [Report!] @relation(name: "ReportForCreator", onDelete: SET_NULL)
}

type ReportType {
  id: ID! @id
  name_uz: String!
  name_ru: String!
  name_en: String!
}

type User {
  id: ID! @id
  name: String!
  phone: String!
  username: String!
  password: String!
  image: String!
  role: Role! @relation(name: "RoleForUser", onDelete: SET_NULL)
  employees: [User!]! @relation(name: "UserEmployees", onDelete: CASCADE)
  manager: User @relation(name: "UserEmployees", onDelete: SET_NULL)
  reports: [ReportComment!] @relation(name: "ReportForUser", onDelete: CASCADE)
  closedReports: [Closer!]!
}

type Closer {
  id: ID! @id
  image: String!
  user: User! @relation(link: INLINE)
  report: Report!
  createdAt: DateTime! @createdAt
}

type Report {
  id: Int! @id(strategy: SEQUENCE) @sequence(name: "MY_SEQUENCE" initialValue:1 allocationSize:100)
  image: String!
  lat: Float!
  lng: Float!
  creator: People! @relation(name: "ReportForCreator", onDelete: SET_NULL)
  closer: Closer @relation(link: INLINE)
  comments: [ReportComment !]! @relation(name: "CommentForReport", onDelete: CASCADE)
  status: Status! @relation(name: "ReportStatus", onDelete: SET_NULL)
  type: ReportType! @relation(name: "ReportType")
  deadline: DateTime
  createdAt: DateTime! @createdAt
}

type ReportComment {
  id: ID! @id
  comment: String
  status: Status! @relation(name: "StatusOfReport", onDelete: SET_NULL)
  report: Report! @relation(name: "CommentForReport", onDelete: SET_NULL)
  to: User! @relation(name: "ReportForUser", onDelete: SET_NULL)
  createdAt: DateTime! @createdAt
}
